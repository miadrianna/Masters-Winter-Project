OW.Meta<- read.csv(infection, header = TRUE)
Date<- read.csv(temperature,header=TRUE, row.names=1)
OW.prev<- unlist(lapply(unique(OW.Meta$Year), function(x) nrow(OW.Meta[(OW.Meta$GE >10) & (OW.Meta$Year == x),])/nrow(OW.Meta[OW.Meta$Year == x,])))
names(OW.prev) <- unique(OW.Meta$Year)
OW.prev<- OW.prev[years]
date<- Date[years, , drop= TRUE ]
names(date)<- years
plot(date, OW.prev, pch=20, cex=3)
Pos<- 1*(OW.Meta[OW.Meta$Year %in% years, "GE"]>10)
OW<- unlist(lapply(OW.Meta$Year, function(x) date[names(date) == x, drop = TRUE]))
OW.glm<- glm(Pos~OW, family = "binomial")
#These codes are the equations to test the strenght of the glm models and print them out as aprt of the summary of the model
R2 <- (OW.glm$null.deviance - OW.glm$deviance) / OW.glm$null.deviance
chisq <- 1-pchisq(OW.glm$deviance, OW.glm$df.residual)
deviance<- with(OW.glm, null.deviance-deviance)
residual<- with(OW.glm, df.null-df.residual)
chisqnull<- with(OW.glm, pchisq(null.deviance-deviance, df.null-df.residual, lower.tail = FALSE))
Dispersion<- OW.glm$deviance/OW.glm$df.residual
print(summary(OW.glm))
print(paste("R2 is equal to",R2))
print(paste("chisq is equal to",chisq))
print(paste("null.deviance-deviance is equal to",deviance))
print(paste("df.null-df.residual is equal to", residual))
print(paste("chisq null is equal to", chisqnull))
print(paste("Dispersion is equal to", Dispersion))
#This is used to make the sunflower plots by taking the information from the model to create the bubbles with number of species infected/non-infected and the lines
pred.x <- data.frame(OW=1:365)
class(pred.x)
pred.y <- predict(OW.glm, newdata=pred.x, type="response")
class(pred.y)
temp <- xyTable(Pos~OW)
temp
#This is where the colours are associated to each bubble
toto <- data.frame("data" = Date[years,], row.names = years)
toto
rownames(toto) <-colours[1:nrow(toto)]
bubcol <- rownames(toto)[match(round(temp$x,3), round(toto[,1],3))]
#This is the actual creation of the sunflower plot saved as an svg image
svg(name_of_file, width=9,height=6)
symbols(temp$x, temp$y, bg=transp(bubcol), circ=size*sqrt(temp$number), inches=FALSE, xlab=test_against, ylab="Presence of Bd", xlim=xlim)
text(temp$x, temp$y, label=temp$number)
abline(h=0:1, col=transp("grey"))
lines(pred.x$OW, pred.y, lwd=2)
legend("right", fill=transp(rownames(toto)), legend=years, title="Year")
dev.off()
}
#These are all the files which used the code above to give out a summary of the model as well as the summary for the strenght of the model and an svg plot which automatically gets saved in the folder rather than appear on R studio
#Alytes OW tadpoles test - Arlet
Temperature_vs_prev(infection = "Arl.Ao.OWL.csv", temperature = "Yearly_Avg_Temp_ Arl.csv", years = c("2008", "2011", "2012", "2013", "2016"), test_against = "Yearly averages temperatures", name_of_file = "Arl.Ao.OW.Avg.svg", size = 0.05, xlim = c(4,8))
#Alytes OW tadpoles test - Arlet-Lag
Temperature_vs_prev(infection = "Arl.Ao.OWL.csv", temperature = "Yearly_Avg_Temp_ Arl_Lag.csv", years = c("2011", "2012", "2013", "2016"), test_against = "Yearly averages temperatures", name_of_file = "Arl.Ao.OW.Avg.Lag.svg", size = 0.05, xlim = c(1,8))
#Alytes OW tadpoles test - Acherito
Ach.Ao<- Temperature_vs_prev(infection = "Ach.Ao.OWL.csv", temperature = "Yearly_Avg_Temp_Ach.csv", years = c("2009","2011", "2014", "2017"), test_against = "Yearly averages temperatures", name_of_file = "Ach.Ao.OW.Avg.svg", size = 0.03, xlim = c(5,9))
#Alytes OW tadpoles test - Acherito-Lag
Temperature_vs_prev(infection = "Ach.Ao.OWL.csv", temperature = "Yearly_Avg_Temp_Ach_Lag.csv", years = c("2009","2011", "2014", "2017"), test_against = "Yearly averages temperatures", name_of_file = "Ach.Ao.OW.Avg.Lag.svg", size = 0.05, xlim = c(4,10))
#Alytes OW tadpoles test - Ansabere
Temperature_vs_prev(infection = "Ans.Ao.OWL.csv", temperature = "Yearly_Avg_Temp_Ans.csv", years = c("2008", "2009","2011", "2014", "2016"), test_against = "Yearly averages temperatures", name_of_file = "Ans.Ao.OW.Avg.svg", size = 0.03, xlim = c(4,8))
#Alytes OW tadpoles test - Ansabere-Lag
Temperature_vs_prev(infection = "Ans.Ao.OWL.csv", temperature = "Yearly_Avg_Temp_Ans_Lag.csv", years = c("2009", "2011","2014", "2016"), test_against = "Yearly averages temperatures", name_of_file = "Ans.Ao.OW.Avg.Lag.svg", size = 0.04, xlim = c(4,9))
#Alytes OW tadpoles test - Puits
Temperature_vs_prev(infection = "Pui.Ao.OWL.csv", temperature = "Yearly_Avg_Temp_Pui.csv", years = c("2008", "2009", "2010","2014", "2016"), test_against = "Yearly averages temperatures", name_of_file = "Pui.Ao.OW.Avg.svg", size = 0.02, xlim = c(5,7))
#Alytes OW tadpoles test - Puits-Lag
Temperature_vs_prev(infection = "Pui.Ao.OWL.csv", temperature = "Yearly_Avg_Temp_Pui_Lag.csv", years = c("2009", "2010","2014", "2016"), test_against = "Yearly averages temperatures", name_of_file = "Pui.Ao.OW.Avg.Lag.svg", size = 0.04, xlim = c(5,8))
library(adegenet)
library(multcomp)
#These colours make up the colour pallete used in the sunflower plots generated by this code
colours <- c("darkgreen","gold3","darkturquoise","deeppink","firebrick4","red","snow4","royalblue4", "orangered2","khaki3", "lightgoldenrod3","navy","slategray2")
#The initial part of the code specifies what parts need to be derived from the files down below.
#As you continue through the code the next parts are where the proportion of infected as well as the yearly average temperatures are paired with the corresponding years
#Also the data was converted into binary data of 0 and 1s and a binomial glm was run
Temperature_vs_prev <- function(infection, temperature, years, test_against, name_of_file, size, xlim){
OW.Meta<- read.csv(infection, header = TRUE)
Date<- read.csv(temperature,header=TRUE, row.names=1)
OW.prev<- unlist(lapply(unique(OW.Meta$Year), function(x) nrow(OW.Meta[(OW.Meta$GE >10) & (OW.Meta$Year == x),])/nrow(OW.Meta[OW.Meta$Year == x,])))
names(OW.prev) <- unique(OW.Meta$Year)
OW.prev<- OW.prev[years]
date<- Date[years, , drop= TRUE ]
names(date)<- years
plot(date, OW.prev, pch=20, cex=3)
Pos<- 1*(OW.Meta[OW.Meta$Year %in% years, "GE"]>10)
OW<- unlist(lapply(OW.Meta$Year, function(x) date[names(date) == x, drop = TRUE]))
OW.glm<- glm(Pos~OW, family = "binomial")
#These codes are the equations to test the strenght of the glm models and print them out as aprt of the summary of the model
R2 <- (OW.glm$null.deviance - OW.glm$deviance) / OW.glm$null.deviance
chisq <- 1-pchisq(OW.glm$deviance, OW.glm$df.residual)
deviance<- with(OW.glm, null.deviance-deviance)
residual<- with(OW.glm, df.null-df.residual)
chisqnull<- with(OW.glm, pchisq(null.deviance-deviance, df.null-df.residual, lower.tail = FALSE))
Dispersion<- OW.glm$deviance/OW.glm$df.residual
print(summary(OW.glm))
print(paste("R2 is equal to",R2))
print(paste("chisq is equal to",chisq))
print(paste("null.deviance-deviance is equal to",deviance))
print(paste("df.null-df.residual is equal to", residual))
print(paste("chisq null is equal to", chisqnull))
print(paste("Dispersion is equal to", Dispersion))
#This is used to make the sunflower plots by taking the information from the model to create the bubbles with number of species infected/non-infected and the lines
pred.x <- data.frame(OW=1:365)
class(pred.x)
pred.y <- predict(OW.glm, newdata=pred.x, type="response")
class(pred.y)
temp <- xyTable(Pos~OW)
temp
#This is where the colours are associated to each bubble
toto <- data.frame("data" = Date[years,], row.names = years)
toto
rownames(toto) <-colours[1:nrow(toto)]
bubcol <- rownames(toto)[match(round(temp$x,3), round(toto[,1],3))]
#This is the actual creation of the sunflower plot saved as an svg image
svg(name_of_file, width=9,height=6)
symbols(temp$x, temp$y, bg=transp(bubcol), circ=size*sqrt(temp$number), inches=FALSE, xlab=test_against, ylab="Presence of Bd", xlim=xlim)
text(temp$x, temp$y, label=temp$number)
abline(h=0:1, col=transp("grey"))
lines(pred.x$OW, pred.y, lwd=2)
legend("right", fill=transp(rownames(toto)), legend=years, title="Year")
dev.off()
}
#Alytes OW tadpoles test - Ansabere-Lag
Temperature_vs_prev(infection = "Ans.Ao.OWL.csv", temperature = "Yearly_Avg_Temp_Ans_Lag.csv", years = c("2009", "2011","2014", "2016"), test_against = "Yearly averages temperatures", name_of_file = "Ans.Ao.OW.Avg.Lag.svg", size = 0.04, xlim = c(4,9))
library(adegenet)
library(multcomp)
#These colours make up the colour pallete used in the sunflower plots generated by this code
colours <- c("darkgreen","gold3","darkturquoise","deeppink","firebrick4","red","snow4","royalblue4", "orangered2","khaki3", "lightgoldenrod3","navy","slategray2")
#The initial part of the code specifies what parts need to be derived from the files down below.
#As you continue through the code the next parts are where the proportion of infected as well as the yearly average temperatures are paired with the corresponding years
#Also the data was converted into binary data of 0 and 1s and a binomial glm was run
Temperature_vs_prev <- function(infection, temperature, years, test_against, name_of_file, size, xlim){
OW.Meta<- read.csv(infection, header = TRUE)
Date<- read.csv(temperature,header=TRUE, row.names=1)
OW.prev<- unlist(lapply(unique(OW.Meta$Year), function(x) nrow(OW.Meta[(OW.Meta$GE >10) & (OW.Meta$Year == x),])/nrow(OW.Meta[OW.Meta$Year == x,])))
names(OW.prev) <- unique(OW.Meta$Year)
OW.prev<- OW.prev[years]
date<- Date[years, , drop= TRUE ]
names(date)<- years
plot(date, OW.prev, pch=20, cex=3)
Pos<- 1*(OW.Meta[OW.Meta$Year %in% years, "GE"]>10)
OW<- unlist(lapply(OW.Meta$Year, function(x) date[names(date) == x, drop = TRUE]))
OW.glm<- glm(Pos~OW, family = "binomial")
#These codes are the equations to test the strenght of the glm models and print them out as aprt of the summary of the model
R2 <- (OW.glm$null.deviance - OW.glm$deviance) / OW.glm$null.deviance
chisq <- 1-pchisq(OW.glm$deviance, OW.glm$df.residual)
deviance<- with(OW.glm, null.deviance-deviance)
residual<- with(OW.glm, df.null-df.residual)
chisqnull<- with(OW.glm, pchisq(null.deviance-deviance, df.null-df.residual, lower.tail = FALSE))
Dispersion<- OW.glm$deviance/OW.glm$df.residual
print(summary(OW.glm))
print(paste("R2 is equal to",R2))
print(paste("chisq is equal to",chisq))
print(paste("null.deviance-deviance is equal to",deviance))
print(paste("df.null-df.residual is equal to", residual))
print(paste("chisq null is equal to", chisqnull))
print(paste("Dispersion is equal to", Dispersion))
#This is used to make the sunflower plots by taking the information from the model to create the bubbles with number of species infected/non-infected and the lines
pred.x <- data.frame(OW=1:365)
class(pred.x)
pred.y <- predict(OW.glm, newdata=pred.x, type="response")
class(pred.y)
temp <- xyTable(Pos~OW)
temp
#This is where the colours are associated to each bubble
toto <- data.frame("data" = Date[years,], row.names = years)
toto
rownames(toto) <-colours[1:nrow(toto)]
bubcol <- rownames(toto)[match(round(temp$x,3), round(toto[,1],3))]
#This is the actual creation of the sunflower plot saved as an svg image
svg(name_of_file, width=9,height=6)
symbols(temp$x, temp$y, bg=transp(bubcol), circ=size*sqrt(temp$number), inches=FALSE, xlab=test_against, ylab="Presence of Bd", xlim=xlim)
text(temp$x, temp$y, label=temp$number)
abline(h=0:1, col=transp("grey"))
lines(pred.x$OW, pred.y, lwd=2)
legend("right", fill=transp(rownames(toto)), legend=years, title="Year")
dev.off()
}
#These are all the files which used the code above to give out a summary of the model as well as the summary for the strenght of the model and an svg plot which automatically gets saved in the folder rather than appear on R studio
#Alytes OW tadpoles test - Arlet
Temperature_vs_prev(infection = "Arl.Ao.OWL.csv", temperature = "Yearly_Avg_Temp_ Arl.csv", years = c("2008", "2011", "2012", "2013", "2016"), test_against = "Yearly averages temperatures", name_of_file = "Arl.Ao.OW.Avg.svg", size = 0.05, xlim = c(4,8))
#Alytes OW tadpoles test - Arlet-Lag
Temperature_vs_prev(infection = "Arl.Ao.OWL.csv", temperature = "Yearly_Avg_Temp_ Arl_Lag.csv", years = c("2011", "2012", "2013", "2016"), test_against = "Yearly averages temperatures", name_of_file = "Arl.Ao.OW.Avg.Lag.svg", size = 0.05, xlim = c(1,8))
#Alytes OW tadpoles test - Acherito
Ach.Ao<- Temperature_vs_prev(infection = "Ach.Ao.OWL.csv", temperature = "Yearly_Avg_Temp_Ach.csv", years = c("2009","2011", "2014", "2017"), test_against = "Yearly averages temperatures", name_of_file = "Ach.Ao.OW.Avg.svg", size = 0.03, xlim = c(5,9))
#Alytes OW tadpoles test - Acherito-Lag
Temperature_vs_prev(infection = "Ach.Ao.OWL.csv", temperature = "Yearly_Avg_Temp_Ach_Lag.csv", years = c("2009","2011", "2014", "2017"), test_against = "Yearly averages temperatures", name_of_file = "Ach.Ao.OW.Avg.Lag.svg", size = 0.05, xlim = c(4,10))
#Alytes OW tadpoles test - Ansabere
Temperature_vs_prev(infection = "Ans.Ao.OWL.csv", temperature = "Yearly_Avg_Temp_Ans.csv", years = c("2008", "2009","2011", "2014", "2016"), test_against = "Yearly averages temperatures", name_of_file = "Ans.Ao.OW.Avg.svg", size = 0.03, xlim = c(4,8))
#Alytes OW tadpoles test - Ansabere-Lag
Temperature_vs_prev(infection = "Ans.Ao.OWL.csv", temperature = "Yearly_Avg_Temp_Ans_Lag.csv", years = c("2009", "2011","2014", "2016"), test_against = "Yearly averages temperatures", name_of_file = "Ans.Ao.OW.Avg.Lag.svg", size = 0.04, xlim = c(4,9))
#Alytes OW tadpoles test - Puits
Temperature_vs_prev(infection = "Pui.Ao.OWL.csv", temperature = "Yearly_Avg_Temp_Pui.csv", years = c("2008", "2009", "2010","2014", "2016"), test_against = "Yearly averages temperatures", name_of_file = "Pui.Ao.OW.Avg.svg", size = 0.02, xlim = c(5,7))
#Alytes OW tadpoles test - Puits-Lag
Temperature_vs_prev(infection = "Pui.Ao.OWL.csv", temperature = "Yearly_Avg_Temp_Pui_Lag.csv", years = c("2009", "2010","2014", "2016"), test_against = "Yearly averages temperatures", name_of_file = "Pui.Ao.OW.Avg.Lag.svg", size = 0.04, xlim = c(5,8))
#Alytes OW tadpoles test - Ansabere-Lag
Temperature_vs_prev(infection = "Ans.Ao.OWL.csv", temperature = "Yearly_Avg_Temp_Ans_Lag.csv", years = c("2009", "2011","2014", "2016"), test_against = "Yearly averages temperatures", name_of_file = "Ans.Ao.OW.Avg.Lag.svg", size = 0.04, xlim = c(4,9))
library(adegenet)
library(multcomp)
#These colours make up the colour pallete used in the sunflower plots generated by this code
colours <- c("darkgreen","gold3","darkturquoise","deeppink","firebrick4","red","snow4","royalblue4", "orangered2","khaki3", "lightgoldenrod3","navy","slategray2")
#The initial part of the code specifies what parts need to be derived from the files down below.
#As you continue through the code the next parts are where the proportion of infected as well as the yearly average temperatures are paired with the corresponding years
#Also the data was converted into binary data of 0 and 1s and a binomial glm was run
Temperature_vs_prev <- function(infection, temperature, years, test_against, name_of_file, size, xlim){
OW.Meta<- read.csv(infection, header = TRUE)
Date<- read.csv(temperature,header=TRUE, row.names=1)
OW.prev<- unlist(lapply(unique(OW.Meta$Year), function(x) nrow(OW.Meta[(OW.Meta$GE >10) & (OW.Meta$Year == x),])/nrow(OW.Meta[OW.Meta$Year == x,])))
names(OW.prev) <- unique(OW.Meta$Year)
OW.prev<- OW.prev[years]
date<- Date[years, , drop= TRUE ]
names(date)<- years
plot(date, OW.prev, pch=20, cex=3)
Pos<- 1*(OW.Meta[OW.Meta$Year %in% years, "GE"]>10)
OW<- unlist(lapply(OW.Meta$Year, function(x) date[names(date) == x, drop = TRUE]))
OW.glm<- glm(Pos~OW, family = "binomial")
#These codes are the equations to test the strenght of the glm models and print them out as aprt of the summary of the model
R2 <- (OW.glm$null.deviance - OW.glm$deviance) / OW.glm$null.deviance
chisq <- 1-pchisq(OW.glm$deviance, OW.glm$df.residual)
deviance<- with(OW.glm, null.deviance-deviance)
residual<- with(OW.glm, df.null-df.residual)
chisqnull<- with(OW.glm, pchisq(null.deviance-deviance, df.null-df.residual, lower.tail = FALSE))
Dispersion<- OW.glm$deviance/OW.glm$df.residual
print(summary(OW.glm))
print(paste("R2 is equal to",R2))
print(paste("chisq is equal to",chisq))
print(paste("null.deviance-deviance is equal to",deviance))
print(paste("df.null-df.residual is equal to", residual))
print(paste("chisq null is equal to", chisqnull))
print(paste("Dispersion is equal to", Dispersion))
#This is used to make the sunflower plots by taking the information from the model to create the bubbles with number of species infected/non-infected and the lines
pred.x <- data.frame(OW=1:365)
class(pred.x)
pred.y <- predict(OW.glm, newdata=pred.x, type="response")
class(pred.y)
temp <- xyTable(Pos~OW)
temp
#This is where the colours are associated to each bubble
toto <- data.frame("data" = Date[years,], row.names = years)
toto
rownames(toto) <-colours[1:nrow(toto)]
bubcol <- rownames(toto)[match(round(temp$x,3), round(toto[,1],3))]
#This is the actual creation of the sunflower plot saved as an svg image
svg(name_of_file, width=9,height=6)
symbols(temp$x, temp$y, bg=transp(bubcol), circ=size*sqrt(temp$number), inches=FALSE, xlab=test_against, ylab="Presence of Bd", xlim=xlim)
text(temp$x, temp$y, label=temp$number)
abline(h=0:1, col=transp("grey"))
lines(pred.x$OW, pred.y, lwd=2)
legend("right", fill=transp(rownames(toto)), legend=years, title="Year")
dev.off()
}
#Alytes OW tadpoles test - Ansabere
Temperature_vs_prev(infection = "Ans.Ao.OWL.csv", temperature = "Yearly_Avg_Temp_Ans.csv", years = c("2008", "2009","2011", "2014", "2016"), test_against = "Yearly averages temperatures", name_of_file = "Ans.Ao.OW.Avg.svg", size = 0.03, xlim = c(4,8))
#Alytes OW tadpoles test - Ansabere-Lag
Temperature_vs_prev(infection = "Ans.Ao.OWL.csv", temperature = "Yearly_Avg_Temp_Ans_Lag.csv", years = c("2009", "2011","2014", "2016"), test_against = "Yearly averages temperatures", name_of_file = "Ans.Ao.OW.Avg.Lag.svg", size = 0.04, xlim = c(4,9))
library(adegenet)
library(multcomp)
#These colours make up the colour pallete used in the sunflower plots generated by this code
colours <- c("darkgreen","gold3","darkturquoise","deeppink","firebrick4","red","snow4","royalblue4", "orangered2","khaki3", "lightgoldenrod3","navy","slategray2")
#The initial part of the code specifies what parts need to be derived from the files down below.
#As you continue through the code the next parts are where the proportion of infected as well as spring onset are paired with the corresponding years
#Also the data was converted into binary data of 0 and 1s and a binomial glm was run
Spring_vs_prev <- function(infection, spring, years, test_against, name_of_file, size, xlim) {
OW<- read.csv(infection, header = TRUE)
Date<- read.csv(spring,header=TRUE, row.names=1)
OW.prev<- unlist(lapply(unique(OW$Year), function(x) nrow(OW[(OW$GE >10) & (OW$Year == x),])/nrow(OW[OW$Year == x,])))
names(OW.prev) <- unique(OW$Year)
OW.prev<- OW.prev[years]
date<- Date[years, , drop= TRUE ]
names(date)<- years
plot(date, OW.prev, pch=20, cex=3)
cor.test(date, OW.prev, method="spearman")
Pos<- 1*(OW[OW$Year %in% years, "GE"]>10)
OW<- unlist(lapply(OW$Year, function(x) date[names(date) == x, drop = TRUE]))
OW.glm<- glm(Pos~OW, family = "binomial")
#These codes are the equations to test the strenght of the glm models and print them out as aprt of the summary of the model
R2 <- (OW.glm$null.deviance - OW.glm$deviance) / OW.glm$null.deviance
chisq <- 1-pchisq(OW.glm$deviance, OW.glm$df.residual)
deviance<- with(OW.glm, null.deviance-deviance)
residual<- with(OW.glm, df.null-df.residual)
chisqnull<- with(OW.glm, pchisq(null.deviance-deviance, df.null-df.residual, lower.tail = FALSE))
Dispersion<- OW.glm$deviance/OW.glm$df.residual
print(summary(OW.glm))
print(paste("R2 is equal to",R2))
print(paste("chisq is equal to",chisq))
print(paste("null.deviance-deviance is equal to",deviance))
print(paste("df.null-df.residual is equal to", residual))
print(paste("chisq null is equal to", chisqnull))
print(paste("Dispersion is equal to", Dispersion))
#This is used to make the sunflower plots by taking the information from the model to create the bubbles with number of species infected/non-infected and the lines
pred.x <- data.frame(OW=1:365)
class(pred.x)
pred.y <- predict(OW.glm, newdata=pred.x, type="response")
class(pred.y)
temp <- xyTable(Pos~OW)
temp
#This is where the colours are associated to each bubble
toto <- data.frame("data" = Date[years,], row.names = years)
toto
rownames(toto) <-colours[1:nrow(toto)]
bubcol <- rownames(toto)[match(round(temp$x,2), round(toto[,1],2))]
#This is the actual creation of the sunflower plot saved as an svg image
svg(name_of_file, width=9,height=6)
symbols(temp$x, temp$y, bg=transp(bubcol), circ=size*sqrt(temp$number), inches=FALSE, xlab=test_against, ylab="Presence of Bd", xlim=xlim)
text(temp$x, temp$y, label=temp$number)
abline(h=0:1, col=transp("grey"))
lines(pred.x$OW, pred.y, lwd=2)
legend("right", fill=transp(rownames(toto)), legend=years, title="Year")
dev.off()
}
#Alytes OW tadpoles test - Ansabere
Spring_vs_prev(infection = "Ans.Ao.OWL.csv", spring = "Ansabere.Dates.csv", years = c("2008", "2009", "2011", "2012","2014", "2016", "2017"), test_against = "Onset of spring", name_of_file = "Ans.Ao.OW.Spring.svg", size = 0.5, xlim = c(90,150))
#Alytes OW tadpoles test - Ansabere
Temperature_vs_prev(infection = "Ans.Ao.OWL.csv", temperature = "Yearly_Avg_Temp_Ans.csv", years = c("2008", "2009","2011", "2014", "2016"), test_against = "Yearly averages temperatures", name_of_file = "Ans.Ao.OW.Avg.svg", size = 0.03, xlim = c(4,8))
#Alytes OW tadpoles test - Puits-Lag
Temperature_vs_prev(infection = "Pui.Ao.OWL.csv", temperature = "Yearly_Avg_Temp_Pui_Lag.csv", years = c("2009", "2010","2014", "2016"), test_against = "Yearly averages temperatures", name_of_file = "Pui.Ao.OW.Avg.Lag.svg", size = 0.04, xlim = c(5,8))
#Alytes OW tadpoles test - Ansabere
Temperature_vs_prev(infection = "Ans.Ao.OWL.csv", temperature = "Yearly_Avg_Temp_Ans.csv", years = c("2008", "2009","2011", "2014", "2016"), test_against = "Yearly averages temperatures", name_of_file = "Ans.Ao.OW.Avg.svg", size = 0.03, xlim = c(4,8))
library(adegenet)
library(multcomp)
#These colours make up the colour pallete used in the sunflower plots generated by this code
colours <- c("darkgreen","gold3","darkturquoise","deeppink","firebrick4","red","snow4","royalblue4", "orangered2","khaki3", "lightgoldenrod3","navy","slategray2")
#The initial part of the code specifies what parts need to be derived from the files down below.
#As you continue through the code the next parts are where the proportion of infected as well as the yearly average temperatures are paired with the corresponding years
#Also the data was converted into binary data of 0 and 1s and a binomial glm was run
Temperature_vs_prev <- function(infection, temperature, years, test_against, name_of_file, size, xlim){
OW.Meta<- read.csv(infection, header = TRUE)
Date<- read.csv(temperature,header=TRUE, row.names=1)
OW.prev<- unlist(lapply(unique(OW.Meta$Year), function(x) nrow(OW.Meta[(OW.Meta$GE >10) & (OW.Meta$Year == x),])/nrow(OW.Meta[OW.Meta$Year == x,])))
names(OW.prev) <- unique(OW.Meta$Year)
OW.prev<- OW.prev[years]
date<- Date[years, , drop= TRUE ]
names(date)<- years
plot(date, OW.prev, pch=20, cex=3)
Pos<- 1*(OW.Meta[OW.Meta$Year %in% years, "GE"]>10)
OW<- unlist(lapply(OW.Meta$Year, function(x) date[names(date) == x, drop = TRUE]))
OW.glm<- glm(Pos~OW, family = "binomial")
#These codes are the equations to test the strenght of the glm models and print them out as aprt of the summary of the model
R2 <- (OW.glm$null.deviance - OW.glm$deviance) / OW.glm$null.deviance
chisq <- 1-pchisq(OW.glm$deviance, OW.glm$df.residual)
deviance<- with(OW.glm, null.deviance-deviance)
residual<- with(OW.glm, df.null-df.residual)
chisqnull<- with(OW.glm, pchisq(null.deviance-deviance, df.null-df.residual, lower.tail = FALSE))
Dispersion<- OW.glm$deviance/OW.glm$df.residual
print(summary(OW.glm))
print(paste("R2 is equal to",R2))
print(paste("chisq is equal to",chisq))
print(paste("null.deviance-deviance is equal to",deviance))
print(paste("df.null-df.residual is equal to", residual))
print(paste("chisq null is equal to", chisqnull))
print(paste("Dispersion is equal to", Dispersion))
#This is used to make the sunflower plots by taking the information from the model to create the bubbles with number of species infected/non-infected and the lines
pred.x <- data.frame(OW=1:365)
class(pred.x)
pred.y <- predict(OW.glm, newdata=pred.x, type="response")
class(pred.y)
temp <- xyTable(Pos~OW)
temp
#This is where the colours are associated to each bubble
toto <- data.frame("data" = Date[years,], row.names = years)
toto
rownames(toto) <-colours[1:nrow(toto)]
bubcol <- rownames(toto)[match(round(temp$x,3), round(toto[,1],3))]
#This is the actual creation of the sunflower plot saved as an svg image
svg(name_of_file, width=9,height=6)
symbols(temp$x, temp$y, bg=transp(bubcol), circ=size*sqrt(temp$number), inches=FALSE, xlab=test_against, ylab="Presence of Bd", xlim=xlim)
text(temp$x, temp$y, label=temp$number)
abline(h=0:1, col=transp("grey"))
lines(pred.x$OW, pred.y, lwd=2)
legend("right", fill=transp(rownames(toto)), legend=years, title="Year")
dev.off()
}
#These are all the files which used the code above to give out a summary of the model as well as the summary for the strenght of the model and an svg plot which automatically gets saved in the folder rather than appear on R studio
#Alytes OW tadpoles test - Arlet
Temperature_vs_prev(infection = "Arl.Ao.OWL.csv", temperature = "Yearly_Avg_Temp_ Arl.csv", years = c("2008", "2011", "2012", "2013", "2016"), test_against = "Yearly averages temperatures", name_of_file = "Arl.Ao.OW.Avg.svg", size = 0.05, xlim = c(4,8))
#Alytes OW tadpoles test - Arlet-Lag
Temperature_vs_prev(infection = "Arl.Ao.OWL.csv", temperature = "Yearly_Avg_Temp_ Arl_Lag.csv", years = c("2011", "2012", "2013", "2016"), test_against = "Yearly averages temperatures", name_of_file = "Arl.Ao.OW.Avg.Lag.svg", size = 0.05, xlim = c(1,8))
#Alytes OW tadpoles test - Acherito
Ach.Ao<- Temperature_vs_prev(infection = "Ach.Ao.OWL.csv", temperature = "Yearly_Avg_Temp_Ach.csv", years = c("2009","2011", "2014", "2017"), test_against = "Yearly averages temperatures", name_of_file = "Ach.Ao.OW.Avg.svg", size = 0.03, xlim = c(5,9))
#Alytes OW tadpoles test - Acherito-Lag
Temperature_vs_prev(infection = "Ach.Ao.OWL.csv", temperature = "Yearly_Avg_Temp_Ach_Lag.csv", years = c("2009","2011", "2014", "2017"), test_against = "Yearly averages temperatures", name_of_file = "Ach.Ao.OW.Avg.Lag.svg", size = 0.05, xlim = c(4,10))
#Alytes OW tadpoles test - Ansabere
Temperature_vs_prev(infection = "Ans.Ao.OWL.csv", temperature = "Yearly_Avg_Temp_Ans.csv", years = c("2008", "2009","2011", "2014", "2016"), test_against = "Yearly averages temperatures", name_of_file = "Ans.Ao.OW.Avg.svg", size = 0.03, xlim = c(4,8))
#Alytes OW tadpoles test - Ansabere-Lag
Temperature_vs_prev(infection = "Ans.Ao.OWL.csv", temperature = "Yearly_Avg_Temp_Ans_Lag.csv", years = c("2009", "2011","2014", "2016"), test_against = "Yearly averages temperatures", name_of_file = "Ans.Ao.OW.Avg.Lag.svg", size = 0.04, xlim = c(4,9))
#Alytes OW tadpoles test - Puits
Temperature_vs_prev(infection = "Pui.Ao.OWL.csv", temperature = "Yearly_Avg_Temp_Pui.csv", years = c("2008", "2009", "2010","2014", "2016"), test_against = "Yearly averages temperatures", name_of_file = "Pui.Ao.OW.Avg.svg", size = 0.02, xlim = c(5,7))
#Alytes OW tadpoles test - Puits-Lag
Temperature_vs_prev(infection = "Pui.Ao.OWL.csv", temperature = "Yearly_Avg_Temp_Pui_Lag.csv", years = c("2009", "2010","2014", "2016"), test_against = "Yearly averages temperatures", name_of_file = "Pui.Ao.OW.Avg.Lag.svg", size = 0.04, xlim = c(5,8))
library(adegenet)
library(multcomp)
#These colours make up the colour pallete used in the sunflower plots generated by this code
colours <- c("darkgreen","gold3","darkturquoise","deeppink","firebrick4","red","snow4","royalblue4", "orangered2","khaki3", "lightgoldenrod3","navy","slategray2")
#The initial part of the code specifies what parts need to be derived from the files down below.
#As you continue through the code the next parts are where the proportion of infected as well as spring onset are paired with the corresponding years
#Also the data was converted into binary data of 0 and 1s and a binomial glm was run
Spring_vs_prev <- function(infection, spring, years, test_against, name_of_file, size, xlim) {
OW<- read.csv(infection, header = TRUE)
Date<- read.csv(spring,header=TRUE, row.names=1)
OW.prev<- unlist(lapply(unique(OW$Year), function(x) nrow(OW[(OW$GE >10) & (OW$Year == x),])/nrow(OW[OW$Year == x,])))
names(OW.prev) <- unique(OW$Year)
OW.prev<- OW.prev[years]
date<- Date[years, , drop= TRUE ]
names(date)<- years
plot(date, OW.prev, pch=20, cex=3)
cor.test(date, OW.prev, method="spearman")
Pos<- 1*(OW[OW$Year %in% years, "GE"]>10)
OW<- unlist(lapply(OW$Year, function(x) date[names(date) == x, drop = TRUE]))
OW.glm<- glm(Pos~OW, family = "binomial")
#These codes are the equations to test the strenght of the glm models and print them out as aprt of the summary of the model
R2 <- (OW.glm$null.deviance - OW.glm$deviance) / OW.glm$null.deviance
chisq <- 1-pchisq(OW.glm$deviance, OW.glm$df.residual)
deviance<- with(OW.glm, null.deviance-deviance)
residual<- with(OW.glm, df.null-df.residual)
chisqnull<- with(OW.glm, pchisq(null.deviance-deviance, df.null-df.residual, lower.tail = FALSE))
Dispersion<- OW.glm$deviance/OW.glm$df.residual
print(summary(OW.glm))
print(paste("R2 is equal to",R2))
print(paste("chisq is equal to",chisq))
print(paste("null.deviance-deviance is equal to",deviance))
print(paste("df.null-df.residual is equal to", residual))
print(paste("chisq null is equal to", chisqnull))
print(paste("Dispersion is equal to", Dispersion))
#This is used to make the sunflower plots by taking the information from the model to create the bubbles with number of species infected/non-infected and the lines
pred.x <- data.frame(OW=1:365)
class(pred.x)
pred.y <- predict(OW.glm, newdata=pred.x, type="response")
class(pred.y)
temp <- xyTable(Pos~OW)
temp
#This is where the colours are associated to each bubble
toto <- data.frame("data" = Date[years,], row.names = years)
toto
rownames(toto) <-colours[1:nrow(toto)]
bubcol <- rownames(toto)[match(round(temp$x,2), round(toto[,1],2))]
#This is the actual creation of the sunflower plot saved as an svg image
svg(name_of_file, width=9,height=6)
symbols(temp$x, temp$y, bg=transp(bubcol), circ=size*sqrt(temp$number), inches=FALSE, xlab=test_against, ylab="Presence of Bd", xlim=xlim)
text(temp$x, temp$y, label=temp$number)
abline(h=0:1, col=transp("grey"))
lines(pred.x$OW, pred.y, lwd=2)
legend("right", fill=transp(rownames(toto)), legend=years, title="Year")
dev.off()
}
#These are all the files which used the code above to give out a summary of the model as well as the summary for the strenght of the model and an svg plot which automatically gets saved in the folder rather than appear on R studio
#Alytes OW tadpoles test - Arlet
Spring_vs_prev(infection = "Arl.Ao.OWL.csv", spring = "Arlet.Dates.csv", years = c("2008", "2009", "2011", "2012", "2013", "2016", "2018"), test_against = "Onset of spring", name_of_file = "Arl.Ao.OW.Spring.svg", size = 0.5, xlim = c(120,190))
#Alytes OW tadpoles test - Acherito
Spring_vs_prev(infection = "Ach.Ao.OWL.csv", spring = "Acherito.Dates.csv", years = c("2008" ,"2009","2011", "2012", "2014", "2017", "2018"), test_against = "Onset of spring", name_of_file = "Ach.Ao.OW.Spring.svg", size = 0.4, xlim = c(100,150))
#Alytes OW tadpoles test - Ansabere
Spring_vs_prev(infection = "Ans.Ao.OWL.csv", spring = "Ansabere.Dates.csv", years = c("2008", "2009", "2011", "2012","2014", "2016", "2017"), test_against = "Onset of spring", name_of_file = "Ans.Ao.OW.Spring.svg", size = 0.5, xlim = c(90,150))
#Alytes OW tadpoles test - Puits
Spring_vs_prev(infection = "Pui.Ao.OWL.csv", spring = "Puits.Dates.csv", years = c("2008", "2009", "2010","2014", "2016"), test_against = "Onset of spring", name_of_file = "Pui.Ao.OW.Spring.svg", size = 0.2, xlim = c(140,160))
library(adegenet)
library(multcomp)
#These colours make up the colour pallete used in the sunflower plots generated by this code
colours <- c("darkgreen","gold3","darkturquoise","deeppink","firebrick4","red","snow4","royalblue4", "orangered2","khaki3", "lightgoldenrod3","navy","slategray2")
#The initial part of the code specifies what parts need to be derived from the files down below.
#As you continue through the code the next parts are where the proportion of infected as well as spring onset are paired with the corresponding years
#Also the data was converted into binary data of 0 and 1s and a binomial glm was run
Spring_vs_prev <- function(infection, spring, years, test_against, name_of_file, size, xlim) {
OW<- read.csv(infection, header = TRUE)
Date<- read.csv(spring,header=TRUE, row.names=1)
OW.prev<- unlist(lapply(unique(OW$Year), function(x) nrow(OW[(OW$GE >10) & (OW$Year == x),])/nrow(OW[OW$Year == x,])))
names(OW.prev) <- unique(OW$Year)
OW.prev<- OW.prev[years]
date<- Date[years, , drop= TRUE ]
names(date)<- years
plot(date, OW.prev, pch=20, cex=3)
cor.test(date, OW.prev, method="spearman")
Pos<- 1*(OW[OW$Year %in% years, "GE"]>10)
OW<- unlist(lapply(OW$Year, function(x) date[names(date) == x, drop = TRUE]))
OW.glm<- glm(Pos~OW, family = "binomial")
#These codes are the equations to test the strenght of the glm models and print them out as aprt of the summary of the model
R2 <- (OW.glm$null.deviance - OW.glm$deviance) / OW.glm$null.deviance
chisq <- 1-pchisq(OW.glm$deviance, OW.glm$df.residual)
deviance<- with(OW.glm, null.deviance-deviance)
residual<- with(OW.glm, df.null-df.residual)
chisqnull<- with(OW.glm, pchisq(null.deviance-deviance, df.null-df.residual, lower.tail = FALSE))
Dispersion<- OW.glm$deviance/OW.glm$df.residual
print(summary(OW.glm))
print(paste("R2 is equal to",R2))
print(paste("chisq is equal to",chisq))
print(paste("null.deviance-deviance is equal to",deviance))
print(paste("df.null-df.residual is equal to", residual))
print(paste("chisq null is equal to", chisqnull))
print(paste("Dispersion is equal to", Dispersion))
#This is used to make the sunflower plots by taking the information from the model to create the bubbles with number of species infected/non-infected and the lines
pred.x <- data.frame(OW=1:365)
class(pred.x)
pred.y <- predict(OW.glm, newdata=pred.x, type="response")
class(pred.y)
temp <- xyTable(Pos~OW)
temp
#This is where the colours are associated to each bubble
toto <- data.frame("data" = Date[years,], row.names = years)
toto
rownames(toto) <-colours[1:nrow(toto)]
bubcol <- rownames(toto)[match(round(temp$x,2), round(toto[,1],2))]
#This is the actual creation of the sunflower plot saved as an svg image
svg(name_of_file, width=9,height=6)
symbols(temp$x, temp$y, bg=transp(bubcol), circ=size*sqrt(temp$number), inches=FALSE, xlab=test_against, ylab="Presence of Bd", xlim=xlim)
text(temp$x, temp$y, label=temp$number)
abline(h=0:1, col=transp("grey"))
lines(pred.x$OW, pred.y, lwd=2)
legend("right", fill=transp(rownames(toto)), legend=years, title="Year")
dev.off()
}
#These are all the files which used the code above to give out a summary of the model as well as the summary for the strenght of the model and an svg plot which automatically gets saved in the folder rather than appear on R studio
#Alytes OW tadpoles test - Arlet
Spring_vs_prev(infection = "Arl.Ao.OWL.csv", spring = "Arlet.Dates.csv", years = c("2008", "2009", "2011", "2012", "2013", "2016", "2018"), test_against = "Onset of spring", name_of_file = "Arl.Ao.OW.Spring.svg", size = 0.5, xlim = c(120,190))
#Alytes OW tadpoles test - Acherito
Spring_vs_prev(infection = "Ach.Ao.OWL.csv", spring = "Acherito.Dates.csv", years = c("2008" ,"2009","2011", "2012", "2014", "2017", "2018"), test_against = "Onset of spring", name_of_file = "Ach.Ao.OW.Spring.svg", size = 0.4, xlim = c(100,150))
#Alytes OW tadpoles test - Ansabere
Spring_vs_prev(infection = "Ans.Ao.OWL.csv", spring = "Ansabere.Dates.csv", years = c("2008", "2009", "2011", "2012","2014", "2016", "2017"), test_against = "Onset of spring", name_of_file = "Ans.Ao.OW.Spring.svg", size = 0.5, xlim = c(90,150))
#Alytes OW tadpoles test - Puits
Spring_vs_prev(infection = "Pui.Ao.OWL.csv", spring = "Puits.Dates.csv", years = c("2008", "2009", "2010","2014", "2016"), test_against = "Onset of spring", name_of_file = "Pui.Ao.OW.Spring.svg", size = 0.2, xlim = c(140,160))
